Android app development
  Java vs Kotlin
  Kotlin preferred
Android DX
  Android Studio vs Intellj
  Android Studio preferred
UI development
  XML vs Compose
  Compose preferred


Jetpack Compose
  Compose functions are building blocks that describe UI but don't return anything
  They can take input and generate it on screen

  Annotations 
  @Composable
  fun greet(){...}
  @Preview(parameters)

The Compose function:

MUST be a noun: DoneButton()
NOT a verb or verb phrase: DrawTextField()
NOT a nouned preposition: TextFieldWithLink()
NOT an adjective: Bright()
NOT an adverb: Outside()
Nouns MAY be prefixed by descriptive adjectives: RoundIcon()


Architecture Principles
DATA LAYER (Data sources)
vvv
UI LAYER (UI and state holders)
- view models are stateholders

UI elements send events to view model.
View model updates ui state and recomposes Ui elements.

Passing in the required objects is called dependency injection (DI). It is also known as inversion of control.

DI is when a dependency is provided at runtime instead of being hardcoded into the calling class.

Implementing dependency injection:

    Helps with the reusability of code. Code is not dependent on a specific object, which allows for greater flexibility.
    Makes refactoring easier. Code is loosely coupled, so refactoring one section of code does not impact another section of code.
    Helps with testing. Test objects can be passed in during testing.
